{
    "hero": "Reaktivitas sederhana dan performan untuk membangun tampilan bagi pengguna.",
    "get_started": "Memulai",
    "intro_video": "Perkenalan Solid (100 detik)",
    "intro_video_advanced": "Perkenalan lebih lanjut (5 menit)",
    "strengths": [
      {
        "icon": "performant",
        "label": "Performa",
        "description": "Secara konsisten berada di puncak benchmarks kecepatan UI yang diakui dan pemanfaatan memori."
      },
      {
        "icon": "powerful",
        "label": "Kuat",
        "description": "Primitif reaktif yang dapat dikomposisi digabung dengan fleksibilitas JSX."
      },
      {
        "icon": "pragmatic",
        "label": "Pragmatis",
        "description": "API yang masuk akal dan disesuaikan membuat pengembangan menjadi menyenangkan dan sederhana."
      },
      {
        "icon": "productive",
        "label": "Produktif",
        "description": "Ergonomi dan kefamiliaran untuk membangun hal-hal sederhana atau kompleks menjadi mudah."
      }
    ],
    "facts": [
      {
        "label": "4kb",
        "detail": "Minified + Gzipped",
        "link": "https://bundlephobia.com/package/solid-js@1.9.9"
      },
      {
        "label": "34k+",
        "detail": "GitHub stars",
        "link": "https://star-history.t9t.io/#solidjs/solid"
      },
      {
        "label": "7+ tahun",
        "detail": "Dalam Pembuatan"
      },
      {
        "label": "TypeScript",
        "detail": "Support"
      },
      {
        "label": "Peringkat Atas",
        "detail": "Pada Performa"
      },
      {
        "label": "Astro & Vite",
        "detail": "Support",
        "link": "https://github.com/snowpackjs/astro/tree/main/examples/framework-solid"
      }
    ],
    "example": {
      "headline": "Familiar dan modern",
      "copy": [
        "Solid berdiri di antara para raksasa, khususnya React dan Knockout. Jika kamu pernah menggunakan React Hooks sebelumnya, Solid seharusnya terlihat sangat alami. Bahkan, model Solid lebih alami karena jauh lebih sederhana tanpa aturan-aturan Hook. Setiap Komponen dijalankan sekali dan Hooks dan bindinglah yang dijalankan berkali-kali saat dependensinya diperbarui.",
        "Solid mengikuti filosofi yang sama dengan React dengan 'unidirectional data flow', pemisahan baca/tulis, dan antarmuka yang tidak dapat diubah. Hanya saja ia memiliki implementasi yang sama sekali berbeda yang tidak menggunakan Virtual DOM."
      ],
      "link_label": "Lihat Dokumentasi",
      "link": "https://docs.solidjs.com/concepts/components/basics"
    },
    "reactivity": {
      "headline": "Reaktifitas fine-grained berarti kamu bisa melakukan lebih banyak dengan sedikit usaha.",
      "subheadline": "Setiap bagian dari Solid terdiri dari primitif-primitif sederhana kepada ekspresi Javascript pada tampilan JSX kamu.",
      "copy": "Ini membuka kontrol penuh atas apa yang diperbarui dan kapan, bahkan pada tingkat pengikatan/binding DOM. Tanpa Virtual DOM atau perbedaan ekstensif (extensive diffing), framework tidak akan pernah bekerja lebih dari yang Anda inginkan.",
      "link_label": "Lihat dalam tindakan.",
      "link": "https://playground.solidjs.com"
    },
    "performance": {
      "headline": [
        "Fokus pada performa",
        "di klien dan server"
      ],
      "copy": "Kekuatan reaktivitas fine-grained sebagai pendekatan bersinar di benchmark-benchmark penting. Meskipun kinerja mungkin bukan fokus kamu, pengalaman pengguna akhir selalu menjadi perhatian. Pikirkan peningkatan kinerja Solid sebagai hadiah gratis tanpa tambahan kompleksitas pada pengembangan (development). Ini tentang menjadi cepat tanpa berusaha.",
      "link_label": "Baca artikel lengkapnya",
      "link": "https://ryansolid.medium.com/solidjs-the-tesla-of-javascript-ui-frameworks-6a1d379bc05e"
    },
    "features": {
      "headline": "Penuh dengan banyak fitur.",
      "copy": "Solid mendukung semua fitur-fitur library yang umum dan diharapkan, dan memperluas aspek untuk meningkatkan DX.",
      "list": [
        "Fragments",
        "Portals",
        "Context",
        "Suspense",
        "Error Boundaries",
        "Komponen-komponen Lazy",
        "Async & Concurrent Rendering",
        "Implicit Delegation",
        "SSR & Hydration",
        "Directives",
        "Streaming"
      ]
    },
    "benchmarks": {
      "time": "Waktu",
      "view": "Lihat benchmark",
      "show_more": "Lihat lebih banyak benchmark client + server",
      "link_label": "Benchmark Framework JS membandingkan performa browser pada berbagai test-test. Lebih rendah lebih baik.",
      "js_benchmark": {
        "title": "Benchmark Framework JS",
        "description": "Benchmark Framework JS membandingkan performa browser pada berbagai test-test. Lebih rendah lebih baik."
      },
      "isomorophic_benchmark": {
        "title": "Benchmark Isomorphic UI (Hasil Pencarian)",
        "description": "Benchmark ini mengetes kecepatan asli Server Rendering. Lebih tinggi lebih baik."
      }
    }
  }
