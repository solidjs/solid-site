{
    "hero": "Simple and performant reactivity for building user interfaces.",
    "get_started": "Get Started",
    "intro_video": "Intro to Solid (100 seconds)",
    "intro_video_advanced": "Advanced intro (5 minutes)",
    "news":
      {
        "content": "Visit the <b>Solid Store</b> for stickers, t-shirts and more!"
      },
    "strengths": [
      {
        "icon": "performant",
        "label": "Performant",
        "description": "Consistently tops recognized benchmarks for UI speed and memory utilization."
      },
      {
        "icon": "powerful",
        "label": "Powerful",
        "description": "Composable reactive primitives plus the flexibility of JSX."
      },
      {
        "icon": "pragmatic",
        "label": "Pragmatic",
        "description": "A sensible and tailored API that makes development fun and simple."
      },
      {
        "icon": "productive",
        "label": "Productive",
        "description": "Ergonomics and familiarity that make building simple or complex frontends a breeze."
      }
    ],
    "facts": [
      {
        "label": "4kb",
        "detail": "Minified + Gzipped",
        "link": "https://bundlephobia.com/package/solid-js@1.9.9"
      },
      {
        "label": "34k+",
        "detail": "GitHub stars",
        "link": "https://star-history.t9t.io/#solidjs/solid"
      },
      {
        "label": "7+ years",
        "detail": "In development"
      },
      {
        "label": "TypeScript",
        "detail": "Support"
      },
      {
        "label": "Top Rated",
        "detail": "In performance"
      },
      {
        "label": "Astro & Vite",
        "detail": "Support"
      }
    ],
    "example": {
      "headline": "Familiar and modern",
      "copy": [
        "Solid stands on the shoulders of giants, particularly React and Knockout. If you've developed with React Functional Components and Hooks before, Solid will feel very natural because it follows the same philosophy as React, with unidirectional data flow, read/write segregation, and immutable interfaces.",
        "It may feel even more natural because Solid's update model is simpler and has no Hook rules. Components execute just once, when they are first rendered, and Hooks and bindings only execute when their dependencies update. This completely different implementation forgoes a Virtual DOM."
      ],
      "link_label": "View Docs",
      "link": "https://docs.solidjs.com/concepts/components/basics"
    },
    "reactivity": {
      "headline": "Fine-grained reactivity lets you do more with less.",
      "subheadline": "Solid is built with efficient reactive primitives you can use from your business logic to your JSX views.",
      "copy": "This unlocks complete control over what gets updated and when, even at the DOM binding level. With no Virtual DOM or extensive diffing, the framework never does more work than you want it to.",
      "link_label": "See it in action",
      "link": "https://playground.solidjs.com"
    },
    "performance": {
      "headline": [
        "Performance focused",
        "on both client and server"
      ],
      "copy": "Fine-grained reactivity's performance shines on all notable benchmarks. Even if performance is not your focus, Solid can provide it without complicating your DX. Think of Solid's performance gain as a free win.",
      "link_label": "Read full article",
      "link": "https://ryansolid.medium.com/solidjs-the-tesla-of-javascript-ui-frameworks-6a1d379bc05e"
    },
    "features": {
      "headline": "Fully loaded with all features.",
      "copy": "Solid supports all expected modern library features and even improves some of them for better DX.",
      "list": [
        "Fragments",
        "Portals",
        "Context",
        "Suspense",
        "Error Boundaries",
        "Lazy Components",
        "Async & Concurrent Rendering",
        "Implicit Delegation",
        "SSR & Hydration",
        "Directives",
        "Streaming"
      ]
    },
    "benchmarks": {
      "time": "Time",
      "view": "View the benchmark",
      "show_more": "Show more client + server benchmarks",
      "link_label": "The JS Framework Benchmark compares browser performance across a wide range of tests. Lower is better.",
      "js_benchmark": {
        "title": "JS Framework Benchmark",
        "description": "The JS Framework Benchmark compares browser performance across a wide range of tests. Lower is better."
      },
      "isomorophic_benchmark": {
        "title": "Isomorphic UI Benchmarks (Search Results)",
        "description": "This benchmark tests raw Server Rendering speeds. Higher is better."
      }
    },
    "ukraine": {
      "link": "https://www.un.org/en/globalceasefire",
      "support": "Support Global Ceasefire!",
      "petition": "End war in Ukraine and all global conflict â†’"
    }
  }
