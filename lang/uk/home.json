{
    "hero": "Проста та продуктивна реактивність для побудови користувацьких інтерфейсів.",
    "get_started": "Розпочати",
    "intro_video": "Вступ у Solid за 100 секунд",
    "intro_video_advanced": "Розширений вступ (5 хвилин)",
    "strengths": [
      {
        "icon": "performant",
        "label": "Ефективна",
        "description": "Стабільно посідає перше місце в тестах на швидкість користувацького інтерфейсу та використання пам'яті."
      },
      {
        "icon": "powerful",
        "label": "Потужна",
        "description": "Комбіновані реактивні примітиви, об'єднані з гнучкістю JSX."
      },
      {
        "icon": "pragmatic",
        "label": "Прагматична",
        "description": "Розробка стає веселою та простою завдяки продуманому та адаптованому API."
      },
      {
        "icon": "productive",
        "label": "Продуктивна",
        "description": "Ергономіка та знайомість значно полегшує створення простих чи складних інтерфейсів."
      }
    ],
    "facts": [
      {
        "label": "4кб",
        "detail": "Мініфіковано + Заархівовано",
        "link": "https://bundlephobia.com/package/solid-js@1.9.9"
      },
      {
        "label": "34k+",
        "detail": "Зірок на GitHub",
        "link": "https://star-history.t9t.io/#solidjs/solid"
      },
      {
        "label": "7+ років",
        "detail": "У розробці"
      },
      {
        "label": "TypeScript",
        "detail": "Підтримується"
      },
      {
        "label": "На вершині",
        "detail": "В оцінках продуктивності"
      },
      {
        "label": "Astro & Vite",
        "detail": "Підтримуються"
      }
    ],
    "ukraine": {
      "support": "Слава Україні!",
      "petition": "Спільнота Solid підтримує вас"
    },
    "example": {
      "headline": "Знайома та сучасна",
      "copy": [
        "Solid стоїть на плечах гігантів, зокрема React та Knockout. Якщо ви раніше розробляли за допомогою хуків React, використання Solid має здаватись знайомим. Насправді модель Solid значно простіша — у ній нема правил щодо використання хуків. Кожен компонент виконується лише раз, а хуки та прив'язки — при оновленні їх залежностей.",
        "Як і React, Solid слідує філософії з однонаправленим потоком даних, розділенням читання і запису та незмінними інтерфейсами. Проте, це зовсім іншій підхід, який не використовує віртуальну модель DOM."
      ],
      "link_label": "Відкрити документацію",
      "link": "https://docs.solidjs.com/concepts/components/basics"
    },
    "reactivity": {
      "headline": "Атомарна реактивність означає, що ви робите більше з меншими зусиллями.",
      "subheadline": "Solid побудовано з ефективними реактивними примітивами, які можна використовувати як для побудови бізнес-логіки, так і у ваших JSX представленнях.",
      "copy": "Це надає повний контроль над тим, що і коли оновлюється, навіть на рівні DOM зв'язок. Без віртуальної моделі DOM і масивного перерахунку відмінностей, фреймворк ніколи не робить більше, ніж ви від нього хочете.",
      "link_label": "Побачити в дії",
      "link": "https://playground.solidjs.com"
    },
    "performance": {
      "headline": [
        "Орієнтований на продуктивність",
        "як на клієнті, так і на сервері"
      ],
      "copy": "Ефективність атомарної реактивності, як підходу, сяє в усіх вагомих бенчмарках. Навіть якщо ви не сфокусовані на продуктивності застосунку, Solid може забезпечити її без ускладнення підходів до розробки. Вважайте приріст у продуктивності з Solid — перевагою без зайвих зусиль.",
      "link_label": "Читати статтю",
      "link": "https://ryansolid.medium.com/solidjs-the-tesla-of-javascript-ui-frameworks-6a1d379bc05e"
    },
    "features": {
      "headline": "Містить усе необхідне.",
      "copy": "Solid підтримує увесь популярний та очікуваний функціонал сучасних бібліотек та розширює його аспекти для покращеного розробницького досвіду.",
      "list": [
        "Фрагменти",
        "Портали",
        "Контекст",
        "Очікування (Suspense)",
        "Перехоплення помилок",
        "Ліниво завантажені компоненти",
        "Асинхронний та паралельний рендеринг",
        "Неявне делегування",
        "Рендеринг на сервері та гідратація",
        "Директиви",
        "Потокова передача"
      ]
    },
    "benchmarks": {
      "time": "Час",
      "view": "Подивитися бенчмарк",
      "show_more": "Показати більше клієнтських та серверних бенчмарків",
      "link_label": "JS Framework Benchmark порівнює продуктивність у браузері в широкому спектрі тестів. Чим менший результат, тим краще.",
      "js_benchmark": {
        "title": "JS Framework Benchmark",
        "description": "JS Framework Benchmark порівнює продуктивність у браузері в широкому спектрі тестів. Чим менший результат, тим краще."
      },
      "isomorophic_benchmark": {
        "title": "Ізоморфний UI бенчмарк (Результати пошуку)",
        "description": "Цей бенчмарк тестує виключно швидкість рендерингу сервера. Чим вищий результат, тим краще."
      }
    }
}
