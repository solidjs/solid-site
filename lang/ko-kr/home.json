{
    "hero": "사용자 인터페이스 구축을 위한 간단하고 뛰어난 성능의 반응성 제공",
    "get_started": "시작하기",
    "intro_video": "Solid 소개 (100초)",
    "intro_video_advanced": "자세한 소개 (5분)",
    "strengths": [
      {
        "icon": "performant",
        "label": "높은 성능",
        "description": "UI 속도와 메모리 사용률 벤치마크에서 항상 최고를 유지하고 있습니다."
      },
      {
        "icon": "powerful",
        "label": "강력함",
        "description": "JSX의 유연성과 결합된 구성 가능한 리액티브 프리미티브."
      },
      {
        "icon": "pragmatic",
        "label": "실용적",
        "description": "합리적이고 꼭 맞는 API는 개발을 재미있고 간단하게 만듭니다."
      },
      {
        "icon": "productive",
        "label": "생산적",
        "description": "인체 공학과 친숙함으로 인해 복잡한 것을 쉽게 개발할 수 있습니다."
      }
    ],
    "facts": [
      {
        "label": "4kb",
        "detail": "코드 경량화 + Gzip 압축",
        "link": "https://bundlephobia.com/package/solid-js@1.9.9"
      },
      {
        "label": "34k+",
        "detail": "깃헙 스타",
        "link": "https://star-history.t9t.io/#solidjs/solid"
      },
      {
        "label": "5년 이상",
        "detail": "개발 기간"
      },
      {
        "label": "타입스크립트",
        "detail": "지원"
      },
      {
        "label": "최고 등급",
        "detail": "성능 부문"
      },
      {
        "label": "Astro, Vite",
        "detail": "지원"
      }
    ],
    "example": {
      "headline": "익숙하고 현대적입니다",
      "copy": [
        "Solid는 React와 Knockout이라는 거인의 어깨 위에 서 있습니다. 리액트 훅을 사용해 개발해 본 경험이 있다면, Solid는 아주 자연스럽게 느껴질 것입니다. 사실 훅 규칙이 없는 Solid 모델이 훨씬 더 자연스럽습니다. 모든 컴포넌트는 한 번만 실행되며, 디펜던시가 업데이트되면 훅과 바인딩이 여러번 실행됩니다.",
        "Solid는 단방향 데이터 흐름, 읽기/쓰기 분리, 불변 인터페이스와 같은 리액트의 철학을 동일하게 따릅니다. 하지만 가상 DOM을 사용하지 않고 완전히 다르게 구현합니다."
      ],
      "link_label": "문서 보기",
      "link": "https://docs.solidjs.com/concepts/components/basics"
    },
    "reactivity": {
      "headline": "세밀한 반응성을 통해 적은 노력으로 더 많은 것을 할 수 있습니다.",
      "subheadline": "Solid는 사용자 영역 코드부터 JSX 뷰까지 효율적인 리액티브 프리미티브로 구축되었습니다.",
      "copy": "이로 인해 DOM 바인딩 수준에서도 업데이트 대상과 시점에 대한 완전한 제어가 가능해졌습니다. 어떤 가상 DOM 이나 diffing 프레임워크에서도 이러한 요구를 만족하지 못했습니다.",
      "link_label": "실제 사용 예",
      "link": "https://playground.solidjs.com"
    },
    "performance": {
      "headline": [
        "성능에 초점을 맞춥니다.",
        "클라이언트와 서버 모두"
      ],
      "copy": "세분화된 반응성 전략은 주요 벤치마크에서 빛을 발합니다. 뛰어난 성능을 필요로 하지 않더라도, 관련된 개발경험 없이도 뛰어난 성능을 달성할 수 있습니다. Solid의 성능은 무료로 얻은 것이라고 생각하세요. Solid는 노력하지 않아도 빨라집니다.",
      "link_label": "전체 기사 읽기",
      "link": "https://ryansolid.medium.com/solidjs-the-tesla-of-javascript-ui-frameworks-6a1d379bc05e"
    },
    "features": {
      "headline": "모든 기능을 완벽하게 갖추고 있습니다.",
      "copy": "Solid는 모든 공통 및 예상 라이브러리 기능을 지원하며, 개발 경험을 향상시키키 위해 모든 면에서 확장합니다.",
      "list": [
        "Fragments",
        "Portals",
        "Context",
        "Suspense",
        "Error Boundaries",
        "Lazy Components",
        "Async & Concurrent Rendering",
        "Implicit Delegation",
        "SSR & Hydration",
        "Directives",
        "Streaming"
      ]
    },
    "benchmarks": {
      "time": "시간",
      "view": "벤치마크 확인",
      "show_more": "더 많은 클라이언트 + 서버 벤치마크 보기",
      "link_label": "JS 프레임워크 벤치마크는 다양한 테스트에서 브라우저 성능을 비교합니다. 낮을수록 좋습니다.",
      "js_benchmark": {
        "title": "JS 프레임워크 벤치마크",
        "description": "JS 프레임워크 벤치마크는 다양한 테스트에서 브라우저 성능을 비교합니다. 낮을수록 좋습니다."
      },
      "isomorophic_benchmark": {
        "title": "동형 UI 벤치마크 (검색 결과)",
        "description": "이 벤치마크는 서버 렌더링 속도를 테스트합니다. 높을수록 좋습니다."
      }
    }
  }
