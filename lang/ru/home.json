{
  "hero": "Простая и производительная реактивность для создания пользовательских интерфейсов.",
  "ukraine": {
    "support": "Мы поддерживаем Украину.",
    "petition": "Подайте петицию своим лидерам и покажите свою поддержку.",
    "link": "https://www.stopputin.net/"
  },
  "get_started": "Приступим",
  "intro_video": "Знакомство с Solid (100 секунд)",
  "intro_video_advanced": "Углублённое знакомство (5 минут)",
  "strengths": [
    {
      "icon": "performant",
      "label": "Производительный",
      "description": "Стабильно лидирует в общепризнанных показателях скорости работы пользовательского интерфейса и использования памяти."
    },
    {
      "icon": "powerful",
      "label": "Мощный",
      "description": "Композитные реактивные примитивы в сочетании с гибкостью JSX."
    },
    {
      "icon": "pragmatic",
      "label": "Прагматичный",
      "description": "Продуманный и адаптированный API делает разработку увлекательной и простой."
    },
    {
      "icon": "productive",
      "label": "Продуктивный",
      "description": "Эргономичность и привычность позволяют легко создавать простые или сложные вещи."
    }
  ],
  "facts": [
    {
      "label": "4кб",
      "detail": "Сжатый + Упакованный",
      "link": "https://bundlephobia.com/package/solid-js@1.9.9"
    },
    {
      "label": "34k+",
      "detail": "Звезд на GitHub",
      "link": "https://star-history.t9t.io/#solidjs/solid"
    },
    {
      "label": "7+ лет",
      "detail": "В разработке"
    },
    {
      "label": "TypeScript",
      "detail": "Поддерживается"
    },
    {
      "label": "Высшая оценка",
      "detail": "В производительности"
    },
    {
      "label": "Astro и Vite",
      "detail": "Поддерживаются"
    }
  ],
  "example": {
    "headline": "Привычный и Современный",
    "copy": [
      "Solid стоит на плечах гигантов, в частности React и Knockout. Если Вы уже разрабатывали с использованием хуков React, Solid покажется Вам очень естественным. На самом деле, более естественным, поскольку модель Solid намного проще, в ней нет правил использования хуков. Каждый компонент выполняется ровно один раз, а хуки и привязки уже несколько раз, по мере обновления зависимостей.",
      "Solid следует той же философии, что и React, с однонаправленным потоком данных, разделением чтения и записи и неизменяемыми интерфейсами. Однако он имеет совершенно другую реализацию, которая не использует виртуальный DOM."
    ],
    "link_label": "Открыть документацию",
    "link": "https://docs.solidjs.com/concepts/components/basics"
  },
  "reactivity": {
    "headline": "Мелкозернистая реактивность означает, что Вы делаете больше с меньшими затратами.",
    "subheadline": "Solid построен с использованием эффективных реактивных примитивов от Вашего пользовательского кода до Ваших представлений JSX.",
    "copy": "Это открывает полный контроль над тем, что обновлять и когда, даже на уровне привязки к DOM. Без виртуального DOM или обширных различий фреймворк никогда не выполнит больше работы, чем Вы хотите.",
    "link_label": "Посмотреть в действии",
    "link": "https://playground.solidjs.com"
  },
  "performance": {
    "headline": [
      "Ориентирован на производительность",
      "как на клиенте, так и на сервере"
    ],
    "copy": "Сила мелкозернистой реактивности как подхода сияет во всех заметных бенчмарках. Даже если производительность не является Вашей целью, то она достигается практически без усилий и опыта разработки. Воспринимайте прирост производительности Solid как халявную победу. Solid - это возможность быть быстрым без усилий",
    "link_label": "Читать полную статью",
    "link": "https://ryansolid.medium.com/solidjs-the-tesla-of-javascript-ui-frameworks-6a1d379bc05e"
  },
  "features": {
    "headline": "Полностью укомплектован всеми фичами.",
    "copy": "Solid включает всю ожидаемую от таких библиотек функциональность, а так же расширяет её аспекты для повышения удобства разработки.",
    "list": [
      "Фрагменты",
      "Порталы",
      "Контексты",
      "Задержки",
      "Перехватчики Ошибок",
      "Ленивые Компоненты",
      "Асинхронный и Параллельный рендеринг",
      "Неявное Делегирование",
      "Серверный Рендеринг и Гидратация",
      "Директивы"
    ]
  },
  "benchmarks": {
    "time": "Время",
    "view": "Посмотреть бенчмарки",
    "show_more": "Показать больше клиентских и серверных бенчмарков",
    "link_label": "JS Framework Benchmark сравнивает производительность браузера по широкому диапазону тестов. Ниже - лучше.",
    "js_benchmark": {
      "title": "JS Framework Benchmark",
      "description": "JS Framework Benchmark сравнивает производительность браузера по широкому диапазону тестов. Ниже - лучше."
    },
    "isomorophic_benchmark": {
      "title": "Бенчмарки изоморфного UI (Результаты поиска)",
      "description": "Этот бенчмарк тестирует скорость рендеринга сервера. Выше - лучше."
    }
  }
}
